@model WeeklyIncomeModel

@{
    ViewBag.tab = "WeeklyIncome";
}

<div class="row">
    <div class="col-12">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active"
                   id="actions-tab"
                   href="#actions"
                   data-toggle="tab"
                   role="tab">Actions</a>
            </li>
            <li class="nav-item">
                <a class="nav-link"
                   id="securities-tab"
                   href="#securities"
                   data-toggle="tab"
                   role="tab">Securities</a>
            </li>
            <li class="nav-item">
                <a class="nav-link"
                   id="play-sheets-tab"
                   href="#play-sheets"
                   data-toggle="tab"
                   role="tab">Play Sheets</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent" style="padding-top: 10px;">
            <div class="tab-pane fade show active" id="actions" role="tabpanel">
                @using (Html.BeginForm("PerformWeeklyIncomeActions", "WeeklyIncome", FormMethod.Post))
                {
                    <div class="card" style="margin-bottom: 1rem;">
                        <div class="card-body">
                            <weekly-income-settings></weekly-income-settings>
                            <div class="form-group row">
                                <label for="actions" class="col-sm-2 col-form-label">Actions</label>
                                <div class="col-sm-10">
                                    <select id="actions" name="actions" class="form-control" multiple="multiple" size="3">
                                        <option value="@((int)WeeklyIncomeActions.SetImportantDates)" selected="selected">@WeeklyIncomeActions.SetImportantDates.GetStringValue()</option>
                                        <option value="@((int)WeeklyIncomeActions.DownloadOptionChains)" selected="selected">@WeeklyIncomeActions.DownloadOptionChains.GetStringValue()</option>
                                        <option value="@((int)WeeklyIncomeActions.GeneratePlaySheet)" selected="selected">@WeeklyIncomeActions.GeneratePlaySheet.GetStringValue()</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row" style="margin-bottom: 0;">
                                <div class="col-sm-12 text-center">
                                    <button type="submit" class="btn btn-primary">Perform Action</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="tab-pane fade" id="securities" role="tabpanel">
                @Html.Partial("_SecuritiesTable")
            </div>
            <div class="tab-pane fade" id="play-sheets" role="tabpanel">
                @Html.Partial("_PlaySheetsTable")
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(function () {
            setTimeout(function () {
                $("#securitiesGrid .k-grid-content").css("height", "").css("max-height", $(window).height() - 300);
                $("#playSheetsGrid .k-grid-content").css("height", "").css("max-height", $(window).height() - 300);
            }, 500);


            $("body").on("change", ".ignoreCheckbox", function () {
                var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/SetIgnore';
                $.post(url,
                    {
                        identifier: $(this).data("identifier"),
                        ignore: $(this).prop("checked")
                    });
            })
                .on("change", ".isBullishCheckbox", function () {
                    var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/SetIsBullish';
                    $.post(url,
                        {
                            identifier: $(this).data("identifier"),
                            isBullish: $(this).prop("checked")
                        });
                })
                .on("change", ".isBearishCheckbox", function () {
                    var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/SetIsBearish';
                    $.post(url,
                        {
                            identifier: $(this).data("identifier"),
                            isBearish: $(this).prop("checked")
                        });
                })
                .on("change", ".usedCheckbox", function () {
                    var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/SetUsed';
                    $.post(url,
                        {
                            identifier: $(this).data("identifier"),
                            used: $(this).prop("checked")
                        });
                })
                .on("click", "#clearBoolsButton", function () {
                    var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/ClearBools';
                    $.post(url, {}, function () {
                            $("#securitiesGrid").data("kendoGrid").dataSource.read();
                            setTimeout(function () {
                                $("#securitiesGrid .k-grid-content").css("height", "").css("max-height", $(window).height() - 300);
                            }, 500);
                        });
                })
                .on("click", "#purgeButton", function () {
                    var url = $("#uxInput_RootUrl").val() + 'WeeklyIncome/Purge';
                    $.post(url, {}, function () {
                        $("#playSheetsGrid").data("kendoGrid").dataSource.read();
                        setTimeout(function () {
                            $("#playSheetsGrid .k-grid-content").css("height", "").css("max-height", $(window).height() - 300);
                        }, 500);
                    });
                });
        });
    </script>
}




