<#@ template debug="true" language="C#" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data.Entity.Design"#>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data.Entity.Design.PluralizationServices" #>
<#@ include file="TemplateFileManager.ttinclude" #>
<#
	string entityMapContent = System.IO.File.ReadAllText(System.IO.Path.GetDirectoryName(this.Host.TemplateFile) + "\\DataAccessStarterEntityMap.xml");
	XDocument entityMap = XDocument.Parse(entityMapContent);
	XNamespace entityMapNamespace = "http://www.codesmithtools.com/entitymap";
	var p = PluralizationService.CreateService(new CultureInfo("en-US"));

var manager = TemplateFileManager.Create(this);
string entityNamespace = entityMap.Element(entityMapNamespace + "EntityMap").Attribute("EntityNamespace").Value;

List<XElement> entities = entityMap.Descendants(entityMapNamespace + "Entity").ToList();
foreach(XElement entity in entities)
{
	string entityName = entity.Attribute("Name").Value;
		
	manager.StartNewFile(String.Format("{0}.cs", entityName),  null, "Code Generation.Non Source Output.Partial Classes");
#>
/*
using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations;

namespace <#= entityNamespace #>
{
	public partial class <#= entityName #>
	{
		#region Custom Properties

		#endregion

		#region Custom Methods

		#endregion
	}
}
*/
<#
}
manager.Process();
#>
